:PROPERTIES:
:ID:       f1cb7ff4-f7bb-4e44-8b0d-f888d0fb4967
:END:
#+title: spring-lifecycle
#+filetags: :project:

- roaming :: [[id:1ef4c08e-f028-42a9-89fb-74138976e198][Spring]]

* Kata

- Start date :: [2021-04-22 Thu]

- Content :: Highlighting different steps of a Spring bean
  lifecycle. Inspired by [[https://springframework.guru/spring-bean-lifecycle/][this tutorial]].

- Project :: This kata created the [[file:../code/spring-lifecycle/][spring-lifecycle]] project. Check a
  snapshot of the project's state at the end of the kata [[https://github.com/alecigne/learning/tree/ck0034/code/spring-lifecycle][here]].

- Branch :: [[https://github.com/alecigne/learning/commits/ck0034][ck0034]]

* Notes

This kata illustrates [[https://docs.spring.io/spring-framework/docs/5.3.6/reference/html/core.html#beans-factory-nature][this section]] of Spring's 5.3.6
documentation. The goal is to understand how certain methods are
called during the lifecycle of a bean, from instantiation to
destruction.

Here is the output from running the ~main~ class:

#+begin_example
--> [STEP: INSTANTIATION] Book()
--> [STEP: AWARE INTERFACES] BeanNameAware.setBeanName()
Bean name -> bookBean
--> [STEP: AWARE INTERFACES] BeanFactoryAware.setBeanFactory()
Singleton -> true
--> [STEP: AWARE INTERFACES] ApplicationContextAware.setApplicationContext()
Bean definition names -> [org.springframework.context.annotation.internalConfigurationAnnotationProcessor, org.springframework.context.annotation.internalAutowiredAnnotationProcessor, org.springframework.context.annotation.internalCommonAnnotationProcessor, org.springframework.context.event.internalEventListenerProcessor, org.springframework.context.event.internalEventListenerFactory, bookBean, bookBeanPostProcessor]
--> [STEP: PREINIT] BeanPostProcessor.postProcessBeforeInitialization()
Bean Name bookBean
--> [STEP: INIT-1] postConstruct() (@PostConstruct annotation)
--> [STEP: INIT-2] InitializingBean.afterPropertiesSet()
--> [STEP: INIT-3] customInit() (from beans.xml)
--> [STEP: POSTINIT] BeanPostProcessor.postProcessAfterInitialization()
Bean Name bookBean
--> [STEP: BEAN READY] getBookName() (from the Book bean)
Book name: Believe in Yourself
--> [STEP: DESTROY-1] preDestroy() (@PreDestroy annotation)
--> [STEP: DESTROY-2] DisposableBean.destroy()
--> [STEP: DESTROY-3] customDestroy() (from beans.xml)
#+end_example

The step are thus:

1. =[INSTANTIATION]=

2. =[AWARE INTERFACES]= Running the methods from the [[https://docs.spring.io/spring-framework/docs/5.3.6/reference/html/core.html#aware-list][*Aware interfaces]]
   (~BeanNameAware~, ~BeanFactoryAware~, ~ApplicationContextAware~)

3. =[PREINIT]= Running ~postProcessBeforeInitialization()~ from
   ~BeanPostProcessor~

4. =[INIT]= Running the [[https://docs.spring.io/spring-framework/docs/5.3.6/reference/html/core.html#beans-factory-lifecycle-initializingbean][initialization]] [[https://docs.spring.io/spring-framework/docs/5.3.6/reference/html/core.html#beans-factory-lifecycle][lifecycle callbacks]] (in [[https://docs.spring.io/spring-framework/docs/5.3.6/reference/html/core.html#beans-factory-lifecycle-combined-effects][order]])

5. =[POSTINIT]= Running ~postProcessAfterInitialization()~ from
   ~BeanPostProcessor~

6. =[BEAN READY]= Using the bean.

7. =[DESTROY]= Running the [[https://docs.spring.io/spring-framework/docs/5.3.6/reference/html/core.html#beans-factory-lifecycle-disposablebean][destruction]] [[https://docs.spring.io/spring-framework/docs/5.3.6/reference/html/core.html#beans-factory-lifecycle][lifecycle callbacks]] (in [[https://docs.spring.io/spring-framework/docs/5.3.6/reference/html/core.html#beans-factory-lifecycle-combined-effects][order]])
